{"ast":null,"code":"var _jsxFileName = \"/Users/dev/Documents/graphql-react/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport { ApolloClient, InMemoryCache, ApolloProvider, gql } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new ApolloClient({\n  uri: 'https://rickandmortyapi.com/graphql',\n  cache: new InMemoryCache()\n});\nclient.query({\n  query: gql`\n    query {\n      characters{\n        results{\n          name\n          species\n          gender\n        }\n      }\n    }\n    `\n});\n// .then((resultCharacters) => console.log(resultCharacters));\nclient.query({\n  query: gql`\n    query {\n      episodes{\n        results{\n          id\n          name\n          episode\n        }\n      }\n    }\n    `\n});\n// .then((resultEpisodes) => console.log(resultEpisodes));\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(ApolloProvider, {\n  client: client,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 45,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["React","ReactDOM","App","ApolloClient","InMemoryCache","ApolloProvider","gql","client","uri","cache","query","root","createRoot","document","getElementById","render"],"sources":["/Users/dev/Documents/graphql-react/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport { ApolloClient, InMemoryCache, ApolloProvider, gql } from '@apollo/client';\n\nconst client = new ApolloClient({\n  uri: 'https://rickandmortyapi.com/graphql',\n  cache: new InMemoryCache(),\n});\n\nclient\n  .query({\n    query: gql`\n    query {\n      characters{\n        results{\n          name\n          species\n          gender\n        }\n      }\n    }\n    `,\n  })\n  // .then((resultCharacters) => console.log(resultCharacters));\n  client\n  .query({\n    query: gql`\n    query {\n      episodes{\n        results{\n          id\n          name\n          episode\n        }\n      }\n    }\n    `,\n  })\n  // .then((resultEpisodes) => console.log(resultEpisodes));\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <ApolloProvider client={client}>\n  <App />\n</ApolloProvider>,\n);\n\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,SAASC,YAAY,EAAEC,aAAa,EAAEC,cAAc,EAAEC,GAAG,QAAQ,gBAAgB;AAAC;AAElF,MAAMC,MAAM,GAAG,IAAIJ,YAAY,CAAC;EAC9BK,GAAG,EAAE,qCAAqC;EAC1CC,KAAK,EAAE,IAAIL,aAAa;AAC1B,CAAC,CAAC;AAEFG,MAAM,CACHG,KAAK,CAAC;EACLA,KAAK,EAAEJ,GAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,CAAC,CAAC;AACF;AACAC,MAAM,CACLG,KAAK,CAAC;EACLA,KAAK,EAAEJ,GAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,CAAC,CAAC;AACF;;AAEF,MAAMK,IAAI,GAAGV,QAAQ,CAACW,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACT,QAAC,cAAc;EAAC,MAAM,EAAER,MAAO;EAAA,uBAC/B,QAAC,GAAG;IAAA;IAAA;IAAA;EAAA;AAAG;EAAA;EAAA;EAAA;AAAA,QACQ,CAChB"},"metadata":{},"sourceType":"module","externalDependencies":[]}